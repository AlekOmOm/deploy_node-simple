name: CD Pipeline

on:
  push:
    branches:
      - main 
      - dev 
  pull_request:
    branches:
      - main 
      - dev 

jobs:
  build:
    name: Build and Push Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Set environment variables from config and branch
      - name: Set environment variables
        id: set-env
        run: |
          chmod +x ./scripts/set-env.sh
          ./scripts/set-env.sh >> $GITHUB_ENV
      
      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }} 
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test --if-present
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}-${{ github.sha }}
          build-args: |
            NODE_VERSION=${{ env.NODE_VERSION }}
            NODE_VERSION_TAG=${{ env.NODE_VERSION_TAG }}
            APP_ENV=${{ env.APP_ENV }}
            PORT=${{ env.PORT }}
  
  deploy:
    name: Deploy to server
    needs: build
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Set environment variables from config and branch
      - name: Set environment variables
        id: set-env
        run: |
          chmod +x ./scripts/set-env.sh
          ./scripts/set-env.sh >> $GITHUB_ENV
      
      - name: Copy deployment files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "scripts/deploy.sh,docker-compose.yml,config/.env.config,scripts/set-env.sh"
          target: "${{ env.DEPLOYMENT_PATH }}"

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ env.DEPLOYMENT_PATH }}
            
            # Generate environment variables for deployment
            chmod +x ./scripts/set-env.sh
            ./scripts/set-env.sh "${{ github.ref_name }}" "${{ github.sha }}" > ./.env.deploy
            
            # Make the deploy script executable and run it
            chmod +x ./scripts/deploy.sh
            ./scripts/deploy.sh
